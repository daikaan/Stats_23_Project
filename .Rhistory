"represents the change in transaction amount from Q4 over Q1.",
"represents the total transaction amount in the last 12 months.",
"represents the total transaction count in the last 12 months.",
"represents the change in transaction count from Q4 over Q1.",
"represents the average card utilization ratio.")
var.dict <- as.data.frame(descriptions, row.names = var.names, )
install.packages("formattable")
library(formattable) # for giving a variable dictionary a better look
formattable(var.dict)
data.split <- splitmix(bank_data)
quantitative <- data.split$X.quanti
qualitative <- data.split$X.quali
length(quantitative)
length(qualitative)
#Checking if there is any null value in the data set
colSums(is.na(bank_data)) #no null value
#boxplot
cust.age.boxplot <- boxplot(quantitative$Customer_Age, ylab = "age")
cust.age.boxplot
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule,
#it is seen that customers over the age of 70 are outliers
age.exc.list <- boxplot.stats(quantitative$Customer_Age)$out
quantitative_less70 <- subset(quantitative,!(Customer_Age %in% age.exc.list))
boxplot(quantitative_less70$Customer_Age, ylab = "age")
#Card Category
ggplot(bank_data, aes(x=Months_on_book, y= Credit_Limit, shape = Card_Category, color= Card_Category))+
geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
card.exc.list <- c("Silver", "Platinum", "Gold")
bank_data_cleaned <- subset(bank_data,!((Customer_Age %in% age.exc.list)| (Card_Category %in% card.exc.list)))
boxplot(bank_data_cleaned$Customer_Age, ylab = "age")
# Descriptive Graphs
#histogram
Cust.age.hist <- hist(bank_data_cleaned$Customer_Age, xlab="age", ylab="freq",
main="Customer age distribution", col="orange")
Cust.age.hist
#Creating age groups
bank_data_cleaned[bank_data_cleaned$Customer_Age <= 34, "age_group"] <- 1
bank_data_cleaned[bank_data_cleaned$Customer_Age > 34 & bank_data_cleaned$Customer_Age <= 44, "age_group"] <- 2
bank_data_cleaned[bank_data_cleaned$Customer_Age > 44 & bank_data_cleaned$Customer_Age <= 54, "age_group"] <- 3
bank_data_cleaned[bank_data_cleaned$Customer_Age > 54, "age_group"] <- 4
#grouped age histogram
Grouped.age.hist <- hist(as.numeric(bank_data_cleaned$age_group), xlab="age_group", ylab="freq", breaks=4,
main="Customer age group distribution", col="green")
# grouped age piechart
library(RColorBrewer)#for the
myPalette <- brewer.pal(6, "Set2")
cust.age.piechart <- pie(count(bank_data_cleaned, age_group)$n, border="white", col=myPalette)
ggplot(bank_data_cleaned, aes(x=Dependent_count)) +
geom_bar(width=1)
depcount.labels <- c(0, 1, 2, 3, 4, 5)
dependent.count.piechart <- pie(count(bank_data_cleaned, Dependent_count)$n, border="white", col=myPalette, labels = depcount.labels)
# months on book (how long a customer is using the bank)
#histogram
hist(bank_data_cleaned$Months_on_book)
#boxplot
months.onbook.boxplot <- boxplot(quantitative$Months_on_book, ylab = "months")
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule, outliers
boxplot.stats(quantitative$Months_on_book)$out
#Total Relationships Count
ggplot(bank_data_cleaned, aes(x=Total_Relationship_Count)) +
geom_bar(width=1)
#Months_Inactive_12months
ggplot(bank_data_cleaned, aes(x=Months_Inactive_12_mon)) +
geom_bar(width=1)
#Contacts Count 12 months
ggplot(bank_data_cleaned, aes(x=Contacts_Count_12_mon)) +
geom_bar(width=1)
#boxplot
credit.limit.boxplot <- boxplot(bank_data_cleaned$Credit_Limit, ylab = "Dollars")
#histogram
hist(bank_data_cleaned$Credit_Limit)
# Total Revolving Balance
#histogram
hist(bank_data_cleaned$Total_Revolving_Bal)
#Average Open to Buy
#histogram
hist(bank_data_cleaned$Avg_Open_To_Buy)
#histogram
hist(bank_data_cleaned$Total_Amt_Chng_Q4_Q1)
#boxplot
total.amtchng.boxplot <- boxplot(bank_data_cleaned$Total_Amt_Chng_Q4_Q1, ylab = "Dollars")
#histogram
hist(bank_data_cleaned$Total_Trans_Amt)
#histogram
hist(bank_data_cleaned$Total_Ct_Chng_Q4_Q1)
#histogram
hist(bank_data_cleaned$Avg_Utilization_Ratio)
dev.off(dev.list()["RStudioGD"]) #to clear the previous plots on the screen
#Histograms
attach(bank_data_cleaned)
par(mfrow=c(3,2))
hist(Avg_Open_To_Buy)
hist(Total_Trans_Amt)
hist(Avg_Utilization_Ratio)
hist(Months_on_book)
hist(Credit_Limit)
hist(table(Months_Inactive_12_mon))
#Histograms
attach(bank_data_cleaned)
par(mfrow=c(3,2))
hist(Avg_Open_To_Buy)
hist(Total_Trans_Amt)
hist(Avg_Utilization_Ratio)
hist(Months_on_book)
hist(Credit_Limit)
hist(table(Months_Inactive_12_mon))
barplot(height=tabulate(as.factor(Income_Category)), names=unique(Income_Category), col= myPalette)
dev.off(dev.list()["RStudioGD"]) #to clear the previous plots on the screen
#histogram
hist(bank_data_cleaned$Avg_Utilization_Ratio)
bank_data <- read.csv('~/GitHub/Stats_23_Project/BankChurners.csv')
head(bank_data)
dim(bank_data) #10127 rows and 23 columns
summary(bank_data)
col = c('CLIENTNUM', 'Attrition_Flag', 'Customer_Age',	'Gender',	'Dependent_count', 'Education_Level',	'Marital_Status',	'Income_Category', 'Card_Category',	'Months_on_book',	'Total_Relationship_Count', 'Months_Inactive_12_mon',	'Contacts_Count_12_mon', 'Credit_Limit', 'Total_Revolving_Bal',	'Avg_Open_To_Buy', 'Total_Amt_Chng_Q4_Q1', 'Total_Trans_Amt', 'Total_Trans_Ct', 'Total_Ct_Chng_Q4_Q1',	'Avg_Utilization_Ratio',	'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',	'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2')
library(knitr)
library(forecast)
library(ggplot2)
library(PCAmixdata)
library(dplyr)
# BRIEF DESCRIPTION OF EACH VARIABLE
var.names <- c("Clientnum", "Attrition_Flag", "Customer_Age", "Gender", "Dependent_count",
"Education_Level", "Marital_Status", "Income_Category", "Card_Category", "Months_on_book",
"Total_Relationship_Count", "Months_Inactive_12_mon", "Contacts_Count_12_mon", "Credit_Limit",
"Total_Revolving_Bal", "Avg_Open_To_Buy", "Total_Amt_Chng_Q4_Q1", "Total_Trans_Amt",
"Total_Trans_Ct", "Total_Ct_Chng_Q4_Q1", "Avg_Utilization_Ratio")
descriptions <- c("represents the unique IDs of customers. It is formed by a unique sequence of 9 digits. There is a total of 10,127 unique customers in the datasets.",
"this target/output variable represents the current status of customers. It has two unique values: one is Existing Customer (current customer) and Attrited Customer (churned customer).",
"this variable consist of the age of customers. The age range of customers is between 27 and 73.",
"this variable is coded as F for Female and M for Male.",
"this variable represents the number of dependents associated with a customer.",
"this variable represents the educational qualification of a customer. It consist of 7 unique values which are High School, Graduate, Uneducated, College, Post-graduate, Doctorate and Unknown. The Unknown group has 1519 customers.",
"this variable represents the marital status of customers. It has 4 unique values which are Married, Single, Unknown, Divorced. The Unknown group has 749 customers.",
"this variable represents the annual income category of card holder: Less than  40K, 40k- 60K, 60K- 80K, 80K-120K, $120+, Unknown. The Unknown group has 1112 customer in this category.",
"this is a product variable that represents the credit card type. It has 4 unique values - Blue, Gold, Silver and Platinum.",
"represents the number of months (period) the account holder has been a customer in the bank.",
"represents the number of products held by the customer.",
"this is the number of months a customer has been inactive in the last 12 months (1 year).",
"this is the number of times a customer has made contact with the bank.",
"this is the credit limit on the credit card owned by customer.",
"represents total revolving balance on the credit card.",
"represents the average Open to Buy Credit Line for last 12 months.",
"represents the change in transaction amount from Q4 over Q1.",
"represents the total transaction amount in the last 12 months.",
"represents the total transaction count in the last 12 months.",
"represents the change in transaction count from Q4 over Q1.",
"represents the average card utilization ratio.")
var.dict <- as.data.frame(descriptions, row.names = var.names, )
install.packages("formattable")
library(formattable) # for giving a variable dictionary a better look
formattable(var.dict)
data.split <- splitmix(bank_data)
quantitative <- data.split$X.quanti
qualitative <- data.split$X.quali
length(quantitative)
length(qualitative)
#Checking if there is any null value in the data set
colSums(is.na(bank_data)) #no null value
#boxplot
cust.age.boxplot <- boxplot(quantitative$Customer_Age, ylab = "age")
cust.age.boxplot
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule,
#it is seen that customers over the age of 70 are outliers
age.exc.list <- boxplot.stats(quantitative$Customer_Age)$out
quantitative_less70 <- subset(quantitative,!(Customer_Age %in% age.exc.list))
boxplot(quantitative_less70$Customer_Age, ylab = "age")
#Card Category
ggplot(bank_data, aes(x=Months_on_book, y= Credit_Limit, shape = Card_Category, color= Card_Category))+
geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
card.exc.list <- c("Silver", "Platinum", "Gold")
bank_data_cleaned <- subset(bank_data,!((Customer_Age %in% age.exc.list)| (Card_Category %in% card.exc.list)))
boxplot(bank_data_cleaned$Customer_Age, ylab = "age")
# Descriptive Graphs
#histogram
Cust.age.hist <- hist(bank_data_cleaned$Customer_Age, xlab="age", ylab="freq",
main="Customer age distribution", col="orange")
Cust.age.hist
#Creating age groups
bank_data_cleaned[bank_data_cleaned$Customer_Age <= 34, "age_group"] <- 1
bank_data_cleaned[bank_data_cleaned$Customer_Age > 34 & bank_data_cleaned$Customer_Age <= 44, "age_group"] <- 2
bank_data_cleaned[bank_data_cleaned$Customer_Age > 44 & bank_data_cleaned$Customer_Age <= 54, "age_group"] <- 3
bank_data_cleaned[bank_data_cleaned$Customer_Age > 54, "age_group"] <- 4
#grouped age histogram
Grouped.age.hist <- hist(as.numeric(bank_data_cleaned$age_group), xlab="age_group", ylab="freq", breaks=4,
main="Customer age group distribution", col="green")
# grouped age piechart
library(RColorBrewer)#for the
myPalette <- brewer.pal(6, "Set2")
cust.age.piechart <- pie(count(bank_data_cleaned, age_group)$n, border="white", col=myPalette)
ggplot(bank_data_cleaned, aes(x=Dependent_count)) +
geom_bar(width=1)
depcount.labels <- c(0, 1, 2, 3, 4, 5)
dependent.count.piechart <- pie(count(bank_data_cleaned, Dependent_count)$n, border="white", col=myPalette, labels = depcount.labels)
# months on book (how long a customer is using the bank)
#histogram
hist(bank_data_cleaned$Months_on_book)
#boxplot
months.onbook.boxplot <- boxplot(quantitative$Months_on_book, ylab = "months")
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule, outliers
boxplot.stats(quantitative$Months_on_book)$out
#Total Relationships Count
ggplot(bank_data_cleaned, aes(x=Total_Relationship_Count)) +
geom_bar(width=1)
#Months_Inactive_12months
ggplot(bank_data_cleaned, aes(x=Months_Inactive_12_mon)) +
geom_bar(width=1)
#Contacts Count 12 months
ggplot(bank_data_cleaned, aes(x=Contacts_Count_12_mon)) +
geom_bar(width=1)
#boxplot
credit.limit.boxplot <- boxplot(bank_data_cleaned$Credit_Limit, ylab = "Dollars")
#histogram
hist(bank_data_cleaned$Credit_Limit)
# Total Revolving Balance
#histogram
hist(bank_data_cleaned$Total_Revolving_Bal)
#Average Open to Buy
#histogram
hist(bank_data_cleaned$Avg_Open_To_Buy)
#histogram
hist(bank_data_cleaned$Total_Amt_Chng_Q4_Q1)
#boxplot
total.amtchng.boxplot <- boxplot(bank_data_cleaned$Total_Amt_Chng_Q4_Q1, ylab = "Dollars")
#histogram
hist(bank_data_cleaned$Total_Trans_Amt)
#histogram
hist(bank_data_cleaned$Total_Ct_Chng_Q4_Q1)
#histogram
hist(bank_data_cleaned$Avg_Utilization_Ratio)
dev.off(dev.list()["RStudioGD"]) #to clear the previous plots on the screen
#Histograms
attach(bank_data_cleaned)
par(mfrow=c(3,2))
hist(Avg_Open_To_Buy)
hist(Total_Trans_Amt)
hist(Avg_Utilization_Ratio)
hist(Months_on_book)
hist(Credit_Limit)
hist(table(Months_Inactive_12_mon))
barplot(height=tabulate(as.factor(Income_Category)), names=unique(Income_Category), col= myPalette)
barplot(height=tabulate(as.factor(Marital_Status)), names=unique(Income_Category), col= myPalette)
barplot(height=tabulate(as.factor(Education_Level)), names=unique(Income_Category), col= myPalette)
pie(count(Attrition_)$n, border="white", col=myPalette, labels = depcount.labels)
unique(bank_data$Attrition_Flag) #to make sure there are only 2 strings
#change 'Existing Customer' to 1 and 'Attrited Customer' to 0 and add new column to quantitative
quantitative$attrition_flag_binary <- ifelse(bank_data$Attrition_Flag=='Existing Customer', 1, 0)
#outlier extraction using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule
boxplot.stats(quantitative$Credit_Limit)$out
#boxplot
relationship.count.boxplot <- boxplot(quantitative$Total_Relationship_Count, ylab = "# of products")
relationship.count.boxplot
#outlier extraction using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule
boxplot.stats(quantitative$Total_Relationship_Count)$out
boxplot(subset(quantitative, select=- c(CLIENTNUM, Credit_Limit, Total_Trans_Ct, Total_Revolving_Bal, Contacts_Count_12_mon, Avg_Open_To_Buy, Total_Amt_Chng_Q4_Q1, Total_Trans_Amt)))
#Avg utilization ratios by age groups
avguti.agegrp <- quantitative %>% group_by(age_group) %>% summarise(avg_uti = mean(Avg_Utilization_Ratio))
plot(avguti.agegrp, type = "o")
#combined figure
ggplot(data = quantitative, aes(x= as.numeric(age_group), color='red')) +
geom_histogram(bins = 4, fill="white", show.legend = FALSE, size=1.1) +
geom_line(data = avguti.agegrp, aes(x=age_group, y=avg_uti), color= 'blue', size=1.1) +
labs(title= 'Avg uti by age group hist', x = 'age_group', y='Count') +   scale_y_continuous(
# Features of the first axis
name = "First Axis",
# Add a second axis and specify its features
sec.axis = sec_axis(~./10000, name="Second Axis")
)
#combined figure
ggplot(data = quantitative, aes(x= as.numeric(age_group), color='red')) +
geom_histogram(bins = 4, fill="white", show.legend = FALSE, size=1.1) +
geom_line(data = avguti.agegrp, aes(x=age_group, y=avg_uti), color= 'blue', size=1.1) +
labs(title= 'Avg uti by age group hist', x = 'age_group', y='Count') +   scale_y_continuous(
# Features of the first axis
name = "First Axis",
# Add a second axis and specify its features
sec.axis = sec_axis(~./10000, name="Second Axis")
)
#Avg utilization ratios by age groups
avguti.agegrp <- quantitative %>% group_by(age_group) %>% summarise(avg_uti = mean(Avg_Utilization_Ratio))
plot(avguti.agegrp, type = "o")
#Months inactive
library(yarrr) #to make colors transparent
hist(bank_data$Months_Inactive_12_mon, col = yarrr::transparent('red',trans.val = 0.9))
hist(bank_data$Contacts_Count_12_mon, col = yarrr::transparent('blue', trans.val = 0.8), add = TRUE)
hist(bank_data$Total_Trans_Ct)
#investigate correlation
#we can add one column after we decide conditions as churn number
#and we can investigate the correlation this column with other columns
library(corrplot)
corr_quant <- subset(quantitative, select = -c(CLIENTNUM, Dependent_count, age_group, Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1, Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2))
corralted = cor(corr_quant)
corrplot(corralted, method = 'color', order = 'alphabet')
#create copy of qualitative data and make it quantitative
qual_to_quant <- qualitative
#change categories to the numeric values
qual_to_quant$Attrition_Flag <- ifelse(qual_to_quant$Attrition_Flag == 'Existing Customer', 1, 0)
qual_to_quant$Gender <- ifelse(qual_to_quant$Gender == 'M', 1, 0)
unique(bank_data$Education_Level)
qual_to_quant$Education_Level[qual_to_quant$Education_Level == 'Unknown'] <- 0
qual_to_quant$Education_Level[qual_to_quant$Education_Level == 'Uneducated'] <- 1
qual_to_quant$Education_Level[qual_to_quant$Education_Level == 'High School'] <- 2
qual_to_quant$Education_Level[qual_to_quant$Education_Level == 'College'] <- 3
qual_to_quant$Education_Level[qual_to_quant$Education_Level == 'Graduate'] <- 4
qual_to_quant$Education_Level[qual_to_quant$Education_Level == 'Post-Graduate'] <- 5
qual_to_quant$Education_Level[qual_to_quant$Education_Level == 'Doctorate'] <- 6
qual_to_quant$Education_Level = as.numeric(as.character(qual_to_quant$Education_Level))
unique(bank_data$Marital_Status)
qual_to_quant$Marital_Status[qual_to_quant$Marital_Status == 'Unknown'] <- 0
qual_to_quant$Marital_Status[qual_to_quant$Marital_Status == 'Single'] <- 1
qual_to_quant$Marital_Status[qual_to_quant$Marital_Status == 'Married'] <- 2
qual_to_quant$Marital_Status[qual_to_quant$Marital_Status == 'Divorced'] <- 3
qual_to_quant$Marital_Status = as.numeric(as.character(qual_to_quant$Marital_Status))
unique(bank_data$Income_Category)
qual_to_quant$Income_Category[qual_to_quant$Income_Category == 'Unknown'] <- 0
qual_to_quant$Income_Category[qual_to_quant$Income_Category == 'Less than $40K'] <- 1
qual_to_quant$Income_Category[qual_to_quant$Income_Category == '$40K - $60K'] <- 2
qual_to_quant$Income_Category[qual_to_quant$Income_Category == '$60K - $80K'] <- 3
qual_to_quant$Income_Category[qual_to_quant$Income_Category == '$80K - $120K'] <- 4
qual_to_quant$Income_Category[qual_to_quant$Income_Category == '$120K +'] <- 5
qual_to_quant$Income_Category = as.numeric(as.character(qual_to_quant$Income_Category))
unique(bank_data$Card_Category)
qual_to_quant$Card_Category[qual_to_quant$Card_Category == 'Silver'] <- 0
qual_to_quant$Card_Category[qual_to_quant$Card_Category == 'Gold'] <- 1
qual_to_quant$Card_Category[qual_to_quant$Card_Category == 'Platinum'] <- 2
qual_to_quant$Card_Category[qual_to_quant$Card_Category == 'Blue'] <- 3
qual_to_quant$Card_Category = as.numeric(as.character(qual_to_quant$Card_Category))
corr_qual_to_quant = cor(qual_to_quant)
corrplot(corr_qual_to_quant, method = 'number')
#function to normalize value
normalizer_fnc <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
quan_normalized <- as.data.frame(lapply(quantitative[2:18], normalizer_fnc))
qual_to_quant_normalized <- as.data.frame(lapply(qual_to_quant[2:6], normalizer_fnc))
cdplot(factor(attrition_flag_binary)~ Total_Trans_Ct, data=quantitative)
cdplot(factor(attrition_flag_binary)~ Total_Revolving_Bal, data=quantitative)
#we need to calculate chi square for the categorical values
#to see are they dependent or not
#assume conf interval 95%
table(quantitative$attrition_flag_binary, quantitative$age_group)
chisq.test(quantitative$attrition_flag_binary, quantitative$age_group, correct=FALSE)
table(quantitative$attrition_flag_binary, quantitative$Dependent_count)
chisq.test(quantitative$attrition_flag_binary, quantitative$Dependent_count, correct=FALSE)
#we need to calculate chi square for the categorical values
#to see are they dependent or not
#assume conf interval 95%
table(quantitative$attrition_flag_binary, quantitative$age_group)
chisq.test(quantitative$attrition_flag_binary, quantitative$age_group, correct=FALSE)
table(quantitative$attrition_flag_binary, quantitative$Dependent_count)
chisq.test(quantitative$attrition_flag_binary, quantitative$Dependent_count, correct=FALSE)
table(quantitative$attrition_flag_binary, quantitative$Total_Relationship_Count)
chisq.test(quantitative$attrition_flag_binary, quantitative$Total_Relationship_Count, correct=FALSE)
table(quantitative$attrition_flag_binary, quantitative$Contacts_Count_12_mon)
chisq.test(quantitative$attrition_flag_binary, quantitative$Contacts_Count_12_mon, correct=FALSE)
table(qual_to_quant$Attrition_Flag, qual_to_quant$Gender)
chisq.test(qual_to_quant$Attrition_Flag, qual_to_quant$Gender, correct=FALSE)
table(qual_to_quant$Attrition_Flag, qual_to_quant$Education_Level)
chisq.test(qual_to_quant$Attrition_Flag, qual_to_quant$Education_Level, correct=FALSE)
table(qual_to_quant$Attrition_Flag, qual_to_quant$Marital_Status)
chisq.test(qual_to_quant$Attrition_Flag, qual_to_quant$Marital_Status, correct=FALSE)
table(qual_to_quant$Attrition_Flag, qual_to_quant$Income_Category)
chisq.test(qual_to_quant$Attrition_Flag, qual_to_quant$Income_Category, correct=FALSE)
#simulate.p.value
table(qual_to_quant$Attrition_Flag, qual_to_quant$Card_Category)
chisq.test(qual_to_quant$Attrition_Flag, qual_to_quant$Card_Category, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Months_Inactive_12_mon)
chisq.test(quantitative$attrition_flag_binary, quantitative$Months_Inactive_12_mon, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Months_on_book)
chisq.test(quantitative$attrition_flag_binary, quantitative$Months_on_book, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Credit_Limit)
chisq.test(quantitative$attrition_flag_binary, quantitative$Credit_Limit, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Total_Revolving_Bal)
chisq.test(quantitative$attrition_flag_binary, quantitative$Total_Revolving_Bal, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Avg_Open_To_Buy)
chisq.test(quantitative$attrition_flag_binary, quantitative$Avg_Open_To_Buy, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Total_Amt_Chng_Q4_Q1)
chisq.test(quantitative$attrition_flag_binary, quantitative$Total_Amt_Chng_Q4_Q1, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Total_Trans_Amt)
chisq.test(quantitative$attrition_flag_binary, quantitative$Total_Trans_Amt, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Total_Trans_Ct)
chisq.test(quantitative$attrition_flag_binary, quantitative$Total_Trans_Ct, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Total_Ct_Chng_Q4_Q1)
chisq.test(quantitative$attrition_flag_binary, quantitative$Total_Ct_Chng_Q4_Q1, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Avg_Utilization_Ratio)
chisq.test(quantitative$attrition_flag_binary, quantitative$Avg_Utilization_Ratio, correct=FALSE, simulate.p.value=TRUE)
table(quantitative$attrition_flag_binary, quantitative$Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1)
chisq.test(quantitative$attrition_flag_binary, quantitative$Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1, correct=FALSE, simulate.p.value=TRUE)
#histograms
hist(bank_data$Avg_Utilization_Ratio)
hist(log1p(bank_data$Avg_Utilization_Ratio))
hist(bank_data$Avg_Open_To_Buy)
hist(log1p(bank_data$Avg_Open_To_Buy))
hist(bank_data$Avg_Open_To_Buy)
ggplot(cleaned_bank_data_withoutNA_quan, aes(x=Months_on_book, y= Credit_Limit, shape = as.factor(Card_Category), color= as.factor(Card_Category)))+
geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
bank_data <- read.csv('~/GitHub/Stats_23_Project/BankChurners.csv')
#########
library("dplyr")
library("corrplot")
library("caTools")
library("ggpubr")
library("ROSE")
library("correlation")
library(moments) #to calculate skewness
library(olsrr) #to use ols_step_backward_p
library(MASS)
library(knitr)
library(forecast)
library(ggplot2)
library(PCAmixdata)
library(purrr)
library(formattable) # for giving a variable dictionary a better look
# BRIEF DESCRIPTION OF EACH VARIABLE
var.names <- c("Clientnum", "Attrition_Flag", "Customer_Age", "Gender", "Dependent_count",
"Education_Level", "Marital_Status", "Income_Category", "Card_Category", "Months_on_book",
"Total_Relationship_Count", "Months_Inactive_12_mon", "Contacts_Count_12_mon", "Credit_Limit",
"Total_Revolving_Bal", "Avg_Open_To_Buy", "Total_Amt_Chng_Q4_Q1", "Total_Trans_Amt",
"Total_Trans_Ct", "Total_Ct_Chng_Q4_Q1", "Avg_Utilization_Ratio")
descriptions <- c("refers to the distinct identification numbers assigned to customers, consisting of a unique sequence of 9 digits. The datasets contain a total of 10,127 customers with unique IDs.",
"refers to the current status of customers, indicating whether they are Existing Customers (current customers) or Attrited Customers (churned customers). There are two distinct values for this target/output variable.",
"represents the age of customers, with a range between 27 and 73.",
"is encoded as 'F' for Female and 'M' for Male.",
"represents the number of dependents associated with a customer.",
"represents the educational qualification of a customer. It encompasses seven distinct values: High School, Graduate, Uneducated, College, Post-graduate, Doctorate, and Unknown. The Unknown category includes 1519 customers.",
"represents the marital status of customers, with four unique values: Married, Single, Unknown, and Divorced. The Unknown category includes 749 customers.",
"represents the annual income category of cardholders: Less than 40K, 40K-60K, 60K-80K, 80K-120K, $120+, and Unknown. The Unknown category includes 1112 customers.",
"refers to a product variable that indicates the type of credit card held by customers. It includes four unique values: Blue, Gold, Silver, and Platinum.",
"represents the duration, in months, that an account holder has been a customer at the bank.",
"represents the number of products held by a customer.",
"represents the number of months during which a customer has been inactive in the last 12 months (1 year).",
"represents the number of times a customer has contacted the bank.",
"represents the credit limit on the customer's credit card.",
"represents the total revolving balance on the customer's credit card.",
"represents the average Open to Buy Credit Line for the last 12 months.",
"represents the change in transaction amount from the fourth quarter (Q4) to the first quarter (Q1).",
"represents the total transaction amount in the last 12 months.",
"represents the total transaction count in the last 12 months.",
"represents the change in transaction count from the fourth quarter (Q4) to the first quarter (Q1).",
"represents the average card utilization ratio.")
var.dict <- as.data.frame(descriptions, row.names = var.names, )
formattable(var.dict)
# DATA PREPERATION
#View the categorical variables
table(bank_data$Attrition_Flag)
table(bank_data$Gender)
table(bank_data$Education_Level)
table(bank_data$Marital_Status)
table(bank_data$Income_Category)
table(bank_data$Card_Category)
#Change Unknown value to NA
bank_data_NA <- data.frame(bank_data)
bank_data_NA[bank_data_NA=='Unknown'] <- NA
#Build a dataset without missing values
bank_data_withoutNA <- na.omit(bank_data_NA)
#We convert categorical variables into numerical
bank_data_withoutNA_quan <- data.frame(bank_data_withoutNA)
bank_data_withoutNA_quan$Attrition_Flag <- as.numeric(bank_data_withoutNA_quan$Attrition_Flag == "Attrited Customer")
bank_data_withoutNA_quan$Gender <- as.numeric(bank_data_withoutNA_quan$Gender == "F")
bank_data_withoutNA_quan <- bank_data_withoutNA_quan %>% rename("Is_Female" = "Gender")
order_education_level <- list("Unknown" = 0,
"Uneducated" = 1,
"High School" = 2,
"College" = 3,
"Graduate" = 4,
"Post-Graduate" = 5,
"Doctorate" = 6)
bank_data_withoutNA_quan$Education_Level <- unlist(order_education_level[as.character(bank_data_withoutNA_quan$Education_Level)])
order_Marital_Status <- list("Unknown" = 0,
"Single" = 1,
"Married" = 2,
"Divorced" = 3)
bank_data_withoutNA_quan$Marital_Status <- unlist(order_Marital_Status[as.character(bank_data_withoutNA_quan$Marital_Status)])
order_Income_Category <- list("Unknown" = 0,
"Less than $40K" = 1,
"$40K - $60K" = 2,
"$60K - $80K" = 3,
"$80K - $120K" = 4,
"$120K +" = 5)
bank_data_withoutNA_quan$Income_Category <- unlist(order_Income_Category[as.character(bank_data_withoutNA_quan$Income_Category)])
#delete naive...1 and 2
bank_data_withoutNA_quan <- subset(bank_data_withoutNA_quan, select = -c(Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1, Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2))
cleaned_bank_data_withoutNA_quan <- bank_data_withoutNA_quan
# Extracting Outliers from age and Rescoping the study to only focus on Blue Cards
#Customer age
#boxplot
cust.age.boxplot <- boxplot(cleaned_bank_data_withoutNA_quan$Customer_Age, ylab = "age")
cust.age.boxplot
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule,
#it is seen that customers over the age of 70 are outliers
age.exc.list <- boxplot.stats(cleaned_bank_data_withoutNA_quan$Customer_Age)$out
ggplot(cleaned_bank_data_withoutNA_quan, aes(x = as.factor(Card_Category), fill = factor(Attrition_Flag))) +
geom_bar() +
labs(fill = "Attrition Flag") +
theme_minimal()
ggplot(cleaned_bank_data_withoutNA_quan, aes(x=Months_on_book, y= Credit_Limit, shape = as.factor(Card_Category), color= as.factor(Card_Category)))+
geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
#Since most of the data is coming from the Blue cards and there is a visible difference on many parameters among categories, we decided to only focus on blue card category
card.exc.list <- c("Silver", "Gold", "Platinum")
cleaned_bank_data_withoutNA_quan <- subset(cleaned_bank_data_withoutNA_quan,!((Customer_Age %in% age.exc.list)| (Card_Category %in% card.exc.list)))
cleaned_bank_data_withoutNA_quan
# Descriptive Graphs
#histogram
Cust.age.hist <- hist(cleaned_bank_data_withoutNA_quan$Customer_Age, xlab="age", ylab="freq",
main="Customer age distribution", col="orange")
Cust.age.hist
#Creating age groups
cleaned_bank_data_withoutNA_quan[cleaned_bank_data_withoutNA_quan$Customer_Age <= 34, "age_group"] <- 1
knitr::spin()
knitr::spin("stat_R")
knitr::spin("stat_R", precious=TRUE)
knitr::spin("stat_r.R", precious=TRUE)
knitr::spin("stat_r.R", precious=TRUE)
