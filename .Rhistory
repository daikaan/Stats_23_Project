Cust.age.hist
#using the histogram, dividing ages into 4 groups seems satisfying
#Creating age groups
bank_data_cleaned[bank_data_cleaned$Customer_Age <= 34, "age_group"] <- 1
bank_data_cleaned[bank_data_cleaned$Customer_Age > 34 & bank_data_cleaned$Customer_Age <= 44, "age_group"] <- 2
bank_data_cleaned[bank_data_cleaned$Customer_Age > 44 & bank_data_cleaned$Customer_Age <= 54, "age_group"] <- 3
bank_data_cleaned[bank_data_cleaned$Customer_Age > 54, "age_group"] <- 4
#grouped age histogram
Grouped.age.hist <- hist(as.numeric(bank_data_cleaned$age_group), xlab="age_group", ylab="freq", breaks=4,
main="Customer age group distribution", col="green")
# grouped age piechart
library(RColorBrewer)#for the
myPalette <- brewer.pal(6, "Set2")
cust.age.piechart <- pie(count(bank_data_cleaned, age_group)$n, border="white", col=myPalette)
#Dependent Count
ggplot(bank_data_cleaned, aes(x=Dependent_count)) +
geom_bar(width=1)
depcount.labels <- c(0, 1, 2, 3, 4, 5)
dependent.count.piechart <- pie(count(bank_data_cleaned, Dependent_count)$n, border="white", col=myPalette, labels = depcount.labels)
# months on book (how long a customer is using the bank)
#histogram
hist(bank_data_cleaned$Months_on_book)
#boxplot
months.onbook.boxplot <- boxplot(quantitative$Months_on_book, ylab = "months")
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule, outliers
boxplot.stats(quantitative$Months_on_book)$out
#Since the outliers in months on books can be identifying on whether the customer is going to churn we decided to keep them in the data set
#Total Relationships Count
ggplot(bank_data_cleaned, aes(x=Total_Relationship_Count)) +
geom_bar(width=1)
#Months_Inactive_12months
ggplot(bank_data_cleaned, aes(x=Months_Inactive_12_mon)) +
geom_bar(width=1)
#Contacts Count 12 months
ggplot(bank_data_cleaned, aes(x=Contacts_Count_12_mon)) +
geom_bar(width=1)
# Credit Limit
#boxplot
credit.limit.boxplot <- boxplot(bank_data_cleaned$Credit_Limit, ylab = "Dollars")
#histogram
hist(bank_data_cleaned$Credit_Limit)
# Total Revolving Balance
#histogram
hist(bank_data_cleaned$Total_Revolving_Bal)
#Average Open to Buy
#histogram
hist(bank_data_cleaned$Avg_Open_To_Buy)
#Total Amount Change Between Q1 and Q4
#histogram
hist(bank_data_cleaned$Total_Amt_Chng_Q4_Q1)
#boxplot
credit.limit.boxplot <- boxplot(bank_data_cleaned$Total_Amt_Chng_Q4_Q1, ylab = "Dollars")
#Total Transaction Amount
#histogram
hist(bank_data_cleaned$Total_Trans_Amt)
#Total Count Change Between Q1 and Q4
#histogram
hist(bank_data_cleaned$Total_Ct_Chng_Q4_Q1)
#Average Utilization Rate
#histogram
hist(bank_data_cleaned$Avg_Utilization_Ratio)
bank_data <- read.csv('~/GitHub/Stats_23_Project/BankChurners.csv')
# client_num should be added to qualitative as well as primary key
# dependent_count to qualitative?
head(bank_data)
dim(bank_data) #10127 rows and 23 columns
summary(bank_data)
col = c('CLIENTNUM', 'Attrition_Flag', 'Customer_Age',	'Gender',	'Dependent_count', 'Education_Level',	'Marital_Status',	'Income_Category', 'Card_Category',	'Months_on_book',	'Total_Relationship_Count', 'Months_Inactive_12_mon',	'Contacts_Count_12_mon', 'Credit_Limit', 'Total_Revolving_Bal',	'Avg_Open_To_Buy', 'Total_Amt_Chng_Q4_Q1', 'Total_Trans_Amt', 'Total_Trans_Ct', 'Total_Ct_Chng_Q4_Q1',	'Avg_Utilization_Ratio',	'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',	'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2')
library(knitr)
library(forecast)
library(ggplot2)
library(PCAmixdata)
library(dplyr)
#FEATURES: (I copied them from another project)
# No NA
# Clientum: represents the unique IDs of customers. It is formed by a unique sequence of 9 digits. There is a total of 10,127 unique customers in the datasets.
# Attrition_Flag: this target/output variable represents the current status of customers. It has two unique values: one is Existing Customer (current customer) and Attrited Customer (churned customer).
# Customer_Age: this variable consist of the age of customers. The age range of customers is between 27 and 73.
# Gender: this variable is coded as F for Female and M for Male.
# Dependent_count: this variable represents the number of dependents associated with a customer.
# Education_Level: this variable represents the educational qualification of a customer. It consist of 7 unique values which are High School, Graduate, Uneducated, College, Post-graduate, Doctorate and Unknown. The Unknown group has 1519 customers.
# Marital_Status: this variable represents the marital status of customers. It has 4 unique values which are Married, Single, Unknown, Divorced. The Unknown group has 749 customers.
# Income_Category: this variable represents the annual income category of card holder: Less than  40K,
# 40k- 60K,
# 60K- 80K,
# 80K-120K, $120+, Unknown. The Unknown group has 1112 customer in this category.
# Card_Category: this is a product variable that represents the credit card type. It has 4 unique values - Blue, Gold, Silver and Platinum.
# Months_on_book: represents the number of months (period) the account holder has been a customer in the bank.
# Total_Relationship_Count: represents the number of products held by the customer.
# Months_Inactive_12_mon: this is the number of months a customer has been inactive in the last 12 months (1 year).
# Contacts_Count_12_mon: this is the number of times a customer has made contact with the bank.
# Credit_Limit: this is the credit limit on the credit card owned by customer.
# Total_Revolving_Bal: represents total revolving balance on the credit card.
# Avg_Open_To_Buy: represents the average Open to Buy Credit Line for last 12 months.
# Total_Amt_Chng_Q4_Q1: represents the change in transaction amount from Q4 over Q1.
# Total_Trans_Amt: represents the total transaction amount in the last 12 months.
# Total_Trans_Ct: represents the total transaction count in the last 12 months.
# Total_Ct_Chng_Q4_Q1: represents the change in transaction count from Q4 over Q1.
# Avg_Utilization_Ratio: represents the average card utilization ratio.
data.split <- splitmix(bank_data)
quantitative <- data.split$X.quanti
qualitative <- data.split$X.quali
length(quantitative)
length(qualitative)
#Checking if there is any null value in the data set
colSums(is.na(bank_data)) #no null value
#Customer age
#boxplot
cust.age.boxplot <- boxplot(quantitative$Customer_Age, ylab = "age")
cust.age.boxplot
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule,
#it is seen that customers over the age of 70 are outliers
age.exc.list <- boxplot.stats(quantitative$Customer_Age)$out
quantitative_less70 <- subset(quantitative,!(Customer_Age %in% age.exc.list))
boxplot(quantitative_less70$Customer_Age, ylab = "age")
#Card Category
ggplot(bank_data, aes(x=Months_on_book, y= Credit_Limit, shape = Card_Category, color= Card_Category))+
geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
card.exc.list <- c("Silver", "Platinum", "Gold")
#bank_data_bluecard <- subset(bank_data,!(Card_Category %in% card.exc.list))
bank_data_cleaned <- subset(bank_data,!((Customer_Age %in% age.exc.list)| (Card_Category %in% card.exc.list)))
boxplot(bank_data_cleaned$Customer_Age, ylab = "age")
# Descriptive Graphs
#histogram
Cust.age.hist <- hist(bank_data_cleaned$Customer_Age, xlab="age", ylab="freq",
main="Customer age distribution", col="orange")
Cust.age.hist
#using the histogram, dividing ages into 4 groups seems satisfying
#Creating age groups
bank_data_cleaned[bank_data_cleaned$Customer_Age <= 34, "age_group"] <- 1
bank_data_cleaned[bank_data_cleaned$Customer_Age > 34 & bank_data_cleaned$Customer_Age <= 44, "age_group"] <- 2
bank_data_cleaned[bank_data_cleaned$Customer_Age > 44 & bank_data_cleaned$Customer_Age <= 54, "age_group"] <- 3
bank_data_cleaned[bank_data_cleaned$Customer_Age > 54, "age_group"] <- 4
#grouped age histogram
Grouped.age.hist <- hist(as.numeric(bank_data_cleaned$age_group), xlab="age_group", ylab="freq", breaks=4,
main="Customer age group distribution", col="green")
# grouped age piechart
library(RColorBrewer)#for the
myPalette <- brewer.pal(6, "Set2")
cust.age.piechart <- pie(count(bank_data_cleaned, age_group)$n, border="white", col=myPalette)
#Dependent Count
ggplot(bank_data_cleaned, aes(x=Dependent_count)) +
geom_bar(width=1)
depcount.labels <- c(0, 1, 2, 3, 4, 5)
dependent.count.piechart <- pie(count(bank_data_cleaned, Dependent_count)$n, border="white", col=myPalette, labels = depcount.labels)
# months on book (how long a customer is using the bank)
#histogram
hist(bank_data_cleaned$Months_on_book)
#boxplot
months.onbook.boxplot <- boxplot(quantitative$Months_on_book, ylab = "months")
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule, outliers
boxplot.stats(quantitative$Months_on_book)$out
#Since the outliers in months on books can be identifying on whether the customer is going to churn we decided to keep them in the data set
#Total Relationships Count
ggplot(bank_data_cleaned, aes(x=Total_Relationship_Count)) +
geom_bar(width=1)
#Months_Inactive_12months
ggplot(bank_data_cleaned, aes(x=Months_Inactive_12_mon)) +
geom_bar(width=1)
#Contacts Count 12 months
ggplot(bank_data_cleaned, aes(x=Contacts_Count_12_mon)) +
geom_bar(width=1)
# Credit Limit
#boxplot
credit.limit.boxplot <- boxplot(bank_data_cleaned$Credit_Limit, ylab = "Dollars")
#histogram
hist(bank_data_cleaned$Credit_Limit)
# Total Revolving Balance
#histogram
hist(bank_data_cleaned$Total_Revolving_Bal)
#Average Open to Buy
#histogram
hist(bank_data_cleaned$Avg_Open_To_Buy)
#Total Amount Change Between Q1 and Q4
#histogram
hist(bank_data_cleaned$Total_Amt_Chng_Q4_Q1)
#boxplot
credit.limit.boxplot <- boxplot(bank_data_cleaned$Total_Amt_Chng_Q4_Q1, ylab = "Dollars")
#Total Transaction Amount
#histogram
hist(bank_data_cleaned$Total_Trans_Amt)
#Total Count Change Between Q1 and Q4
#histogram
hist(bank_data_cleaned$Total_Ct_Chng_Q4_Q1)
#Average Utilization Rate
#histogram
hist(bank_data_cleaned$Avg_Utilization_Ratio)
dev.off(dev.list()["RStudioGD"])
bank_data <- read.csv('~/GitHub/Stats_23_Project/BankChurners.csv')
# client_num should be added to qualitative as well as primary key
# dependent_count to qualitative?
head(bank_data)
dim(bank_data) #10127 rows and 23 columns
summary(bank_data)
col = c('CLIENTNUM', 'Attrition_Flag', 'Customer_Age',	'Gender',	'Dependent_count', 'Education_Level',	'Marital_Status',	'Income_Category', 'Card_Category',	'Months_on_book',	'Total_Relationship_Count', 'Months_Inactive_12_mon',	'Contacts_Count_12_mon', 'Credit_Limit', 'Total_Revolving_Bal',	'Avg_Open_To_Buy', 'Total_Amt_Chng_Q4_Q1', 'Total_Trans_Amt', 'Total_Trans_Ct', 'Total_Ct_Chng_Q4_Q1',	'Avg_Utilization_Ratio',	'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1',	'Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2')
library(knitr)
library(forecast)
library(ggplot2)
library(PCAmixdata)
library(dplyr)
#FEATURES: (I copied them from another project)
# No NA
# Clientum: represents the unique IDs of customers. It is formed by a unique sequence of 9 digits. There is a total of 10,127 unique customers in the datasets.
# Attrition_Flag: this target/output variable represents the current status of customers. It has two unique values: one is Existing Customer (current customer) and Attrited Customer (churned customer).
# Customer_Age: this variable consist of the age of customers. The age range of customers is between 27 and 73.
# Gender: this variable is coded as F for Female and M for Male.
# Dependent_count: this variable represents the number of dependents associated with a customer.
# Education_Level: this variable represents the educational qualification of a customer. It consist of 7 unique values which are High School, Graduate, Uneducated, College, Post-graduate, Doctorate and Unknown. The Unknown group has 1519 customers.
# Marital_Status: this variable represents the marital status of customers. It has 4 unique values which are Married, Single, Unknown, Divorced. The Unknown group has 749 customers.
# Income_Category: this variable represents the annual income category of card holder: Less than  40K,
# 40k- 60K,
# 60K- 80K,
# 80K-120K, $120+, Unknown. The Unknown group has 1112 customer in this category.
# Card_Category: this is a product variable that represents the credit card type. It has 4 unique values - Blue, Gold, Silver and Platinum.
# Months_on_book: represents the number of months (period) the account holder has been a customer in the bank.
# Total_Relationship_Count: represents the number of products held by the customer.
# Months_Inactive_12_mon: this is the number of months a customer has been inactive in the last 12 months (1 year).
# Contacts_Count_12_mon: this is the number of times a customer has made contact with the bank.
# Credit_Limit: this is the credit limit on the credit card owned by customer.
# Total_Revolving_Bal: represents total revolving balance on the credit card.
# Avg_Open_To_Buy: represents the average Open to Buy Credit Line for last 12 months.
# Total_Amt_Chng_Q4_Q1: represents the change in transaction amount from Q4 over Q1.
# Total_Trans_Amt: represents the total transaction amount in the last 12 months.
# Total_Trans_Ct: represents the total transaction count in the last 12 months.
# Total_Ct_Chng_Q4_Q1: represents the change in transaction count from Q4 over Q1.
# Avg_Utilization_Ratio: represents the average card utilization ratio.
data.split <- splitmix(bank_data)
quantitative <- data.split$X.quanti
qualitative <- data.split$X.quali
length(quantitative)
length(qualitative)
#Checking if there is any null value in the data set
colSums(is.na(bank_data)) #no null value
#Customer age
#boxplot
cust.age.boxplot <- boxplot(quantitative$Customer_Age, ylab = "age")
cust.age.boxplot
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule,
#it is seen that customers over the age of 70 are outliers
age.exc.list <- boxplot.stats(quantitative$Customer_Age)$out
quantitative_less70 <- subset(quantitative,!(Customer_Age %in% age.exc.list))
boxplot(quantitative_less70$Customer_Age, ylab = "age")
#Card Category
ggplot(bank_data, aes(x=Months_on_book, y= Credit_Limit, shape = Card_Category, color= Card_Category))+
geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
card.exc.list <- c("Silver", "Platinum", "Gold")
#bank_data_bluecard <- subset(bank_data,!(Card_Category %in% card.exc.list))
bank_data_cleaned <- subset(bank_data,!((Customer_Age %in% age.exc.list)| (Card_Category %in% card.exc.list)))
boxplot(bank_data_cleaned$Customer_Age, ylab = "age")
# Descriptive Graphs
#histogram
Cust.age.hist <- hist(bank_data_cleaned$Customer_Age, xlab="age", ylab="freq",
main="Customer age distribution", col="orange")
Cust.age.hist
#using the histogram, dividing ages into 4 groups seems satisfying
#Creating age groups
bank_data_cleaned[bank_data_cleaned$Customer_Age <= 34, "age_group"] <- 1
bank_data_cleaned[bank_data_cleaned$Customer_Age > 34 & bank_data_cleaned$Customer_Age <= 44, "age_group"] <- 2
bank_data_cleaned[bank_data_cleaned$Customer_Age > 44 & bank_data_cleaned$Customer_Age <= 54, "age_group"] <- 3
bank_data_cleaned[bank_data_cleaned$Customer_Age > 54, "age_group"] <- 4
#grouped age histogram
Grouped.age.hist <- hist(as.numeric(bank_data_cleaned$age_group), xlab="age_group", ylab="freq", breaks=4,
main="Customer age group distribution", col="green")
# grouped age piechart
library(RColorBrewer)#for the
myPalette <- brewer.pal(6, "Set2")
cust.age.piechart <- pie(count(bank_data_cleaned, age_group)$n, border="white", col=myPalette)
#Dependent Count
ggplot(bank_data_cleaned, aes(x=Dependent_count)) +
geom_bar(width=1)
depcount.labels <- c(0, 1, 2, 3, 4, 5)
dependent.count.piechart <- pie(count(bank_data_cleaned, Dependent_count)$n, border="white", col=myPalette, labels = depcount.labels)
# months on book (how long a customer is using the bank)
#histogram
hist(bank_data_cleaned$Months_on_book)
#boxplot
months.onbook.boxplot <- boxplot(quantitative$Months_on_book, ylab = "months")
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule, outliers
boxplot.stats(quantitative$Months_on_book)$out
#Since the outliers in months on books can be identifying on whether the customer is going to churn we decided to keep them in the data set
#Total Relationships Count
ggplot(bank_data_cleaned, aes(x=Total_Relationship_Count)) +
geom_bar(width=1)
#Months_Inactive_12months
ggplot(bank_data_cleaned, aes(x=Months_Inactive_12_mon)) +
geom_bar(width=1)
#Contacts Count 12 months
ggplot(bank_data_cleaned, aes(x=Contacts_Count_12_mon)) +
geom_bar(width=1)
# Credit Limit
#boxplot
credit.limit.boxplot <- boxplot(bank_data_cleaned$Credit_Limit, ylab = "Dollars")
#histogram
hist(bank_data_cleaned$Credit_Limit)
# Total Revolving Balance
#histogram
hist(bank_data_cleaned$Total_Revolving_Bal)
#Average Open to Buy
#histogram
hist(bank_data_cleaned$Avg_Open_To_Buy)
#Total Amount Change Between Q1 and Q4
#histogram
hist(bank_data_cleaned$Total_Amt_Chng_Q4_Q1)
#boxplot
credit.limit.boxplot <- boxplot(bank_data_cleaned$Total_Amt_Chng_Q4_Q1, ylab = "Dollars")
#Total Transaction Amount
#histogram
hist(bank_data_cleaned$Total_Trans_Amt)
#Total Count Change Between Q1 and Q4
#histogram
hist(bank_data_cleaned$Total_Ct_Chng_Q4_Q1)
#Average Utilization Rate
#histogram
hist(bank_data_cleaned$Avg_Utilization_Ratio)
dev.off(dev.list()["RStudioGD"])
attach(bank_data_cleaned)
par(mfrow=c(2,2))
hist(Avg_Open_To_Buy)
hist(Total_Trans_Amt)
hist(Avg_Utilization_Ratio)
boxplot(Total_Ct_Chng_Q4_Q1, main="Boxplot of Total Chng Q1-Q4")
#Histograms
attach(bank_data_cleaned)
par(mfrow=c(2,2))
hist(Avg_Open_To_Buy)
hist(Total_Trans_Amt)
hist(Avg_Utilization_Ratio)
hist(Months_on_book)
par(mfrow=c(3,2))
hist(Avg_Open_To_Buy)
hist(Total_Trans_Amt)
hist(Avg_Utilization_Ratio)
hist(Months_on_book)
hist(Credit_Limit)
hist(Months_Inactive_12_mon)
hist(table(Months_Inactive_12_mon)
hist(table(Months_Inactive_12_mon))
dev.off(dev.list()["RStudioGD"]) #to clear the previous plots on the screen
#boxplot
total.amtchng.boxplot <- boxplot(bank_data_cleaned$Total_Amt_Chng_Q4_Q1, ylab = "Dollars")
View(bank_data_cleaned)
barplot(height=tabulate(Income_Category), names=unique(Income_Category), col= myPalette)
barplot(height=tabulate(as.factor(Income_Category)), names=unique(Income_Category), col= myPalette)
pie(count(Attrition_Flag)$n, border="white", col=myPalette)
pie(count(as.factor(Attrition_Flag))$n, border="white", col=myPalette)
bank_data <- read.csv('~/GitHub/Stats_23_Project/BankChurners.csv')
#########
library("dplyr")
library("corrplot")
library("caTools")
library("ggpubr")
library("ROSE")
library("correlation")
library(moments) #to calculate skewness
library(olsrr) #to use ols_step_backward_p
library(MASS)
library(knitr)
library(forecast)
library(ggplot2)
library(PCAmixdata)
library(purrr)
# DATA PREPERATION
#View the categorical variables
table(bank_data$Attrition_Flag)
table(bank_data$Gender)
table(bank_data$Education_Level)
table(bank_data$Marital_Status)
table(bank_data$Income_Category)
table(bank_data$Card_Category)
#Change Unknown value to NA
bank_data_NA <- data.frame(bank_data)
bank_data_NA[bank_data_NA=='Unknown'] <- NA
#Build a dataset without missing values
bank_data_withoutNA <- na.omit(bank_data_NA)
#We convert categorical variables into numerical
bank_data_withoutNA_quan <- data.frame(bank_data_withoutNA)
bank_data_withoutNA_quan$Attrition_Flag <- as.numeric(bank_data_withoutNA_quan$Attrition_Flag == "Attrited Customer")
bank_data_withoutNA_quan$Gender <- as.numeric(bank_data_withoutNA_quan$Gender == "F")
bank_data_withoutNA_quan <- bank_data_withoutNA_quan %>% rename("Is_Female" = "Gender")
order_education_level <- list("Unknown" = 0,
"Uneducated" = 1,
"High School" = 2,
"College" = 3,
"Graduate" = 4,
"Post-Graduate" = 5,
"Doctorate" = 6)
bank_data_withoutNA_quan$Education_Level <- unlist(order_education_level[as.character(bank_data_withoutNA_quan$Education_Level)])
order_Marital_Status <- list("Unknown" = 0,
"Single" = 1,
"Married" = 2,
"Divorced" = 3)
bank_data_withoutNA_quan$Marital_Status <- unlist(order_Marital_Status[as.character(bank_data_withoutNA_quan$Marital_Status)])
order_Income_Category <- list("Unknown" = 0,
"Less than $40K" = 1,
"$40K - $60K" = 2,
"$60K - $80K" = 3,
"$80K - $120K" = 4,
"$120K +" = 5)
bank_data_withoutNA_quan$Income_Category <- unlist(order_Income_Category[as.character(bank_data_withoutNA_quan$Income_Category)])
order_Card_Category <- list("Blue" = 1,
"Silver" = 2,
"Gold" = 3,
"Platinum" = 4)
bank_data_withoutNA_quan$Card_Category <- unlist(order_Card_Category[as.character(bank_data_withoutNA_quan$Card_Category)])
#delete naive...1 and 2
bank_data_withoutNA_quan <- subset(bank_data_withoutNA_quan, select = -c(Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_1, Naive_Bayes_Classifier_Attrition_Flag_Card_Category_Contacts_Count_12_mon_Dependent_count_Education_Level_Months_Inactive_12_mon_2))
cleaned_bank_data_withoutNA_quan <- bank_data_withoutNA_quan
# Extracting Outliers from age and Rescoping the study to only focus on Blue Cards
#Customer age
#boxplot
cust.age.boxplot <- boxplot(cleaned_bank_data_withoutNA_quan$Customer_Age, ylab = "age")
cust.age.boxplot
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule,
#it is seen that customers over the age of 70 are outliers
age.exc.list <- boxplot.stats(cleaned_bank_data_withoutNA_quan$Customer_Age)$out
# Card Category
ggplot(cleaned_bank_data_withoutNA_quan, aes(x=Months_on_book, y= Credit_Limit, shape = as.factor(Card_Category), color= as.factor(Card_Category)))+
geom_point() + geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
#Since most of the data is coming from the Blue cards and there is a visible difference on many parameters among categories, we decided to only focus on blue card category
card.exc.list <- c(2, 3, 4)
cleaned_bank_data_withoutNA_quan <- subset(cleaned_bank_data_withoutNA_quan,!((Customer_Age %in% age.exc.list)| (Card_Category %in% card.exc.list)))
cleaned_bank_data_withoutNA_quan
# Descriptive Graphs
#histogram
Cust.age.hist <- hist(cleaned_bank_data_withoutNA_quan$Customer_Age, xlab="age", ylab="freq",
main="Customer age distribution", col="orange")
Cust.age.hist
#using the histogram, dividing ages into 4 groups seems satisfying
#Creating age groups
cleaned_bank_data_withoutNA_quan[cleaned_bank_data_withoutNA_quan$Customer_Age <= 34, "age_group"] <- 1
cleaned_bank_data_withoutNA_quan[cleaned_bank_data_withoutNA_quan$Customer_Age > 34 & cleaned_bank_data_withoutNA_quan$Customer_Age <= 44, "age_group"] <- 2
cleaned_bank_data_withoutNA_quan[cleaned_bank_data_withoutNA_quan$Customer_Age > 44 & cleaned_bank_data_withoutNA_quan$Customer_Age <= 54, "age_group"] <- 3
cleaned_bank_data_withoutNA_quan[cleaned_bank_data_withoutNA_quan$Customer_Age > 54, "age_group"] <- 4
#grouped age histogram
Grouped.age.hist <- hist(as.numeric(cleaned_bank_data_withoutNA_quan$age_group), xlab="age_group", ylab="freq", breaks=4,
main="Customer age group distribution", col="green")
# grouped age piechart
library(RColorBrewer)#for the
myPalette <- brewer.pal(6, "Set2")
cust.age.piechart <- pie(count(cleaned_bank_data_withoutNA_quan, age_group)$n, border="white", col=myPalette)
#Dependent Count
ggplot(cleaned_bank_data_withoutNA_quan, aes(x=Dependent_count)) +
geom_bar(width=1)
depcount.labels <- c(0, 1, 2, 3, 4, 5)
dependent.count.piechart <- pie(count(cleaned_bank_data_withoutNA_quan, Dependent_count)$n, border="white", col=myPalette, labels = depcount.labels)
# months on book (how long a customer is using the bank)
#histogram
hist(cleaned_bank_data_withoutNA_quan$Months_on_book)
#boxplot
months.onbook.boxplot <- boxplot(quantitative$Months_on_book, ylab = "months")
#using the 1st quartile-1.5*IQR and 3rd quartile+1.5*IQR rule, outliers
boxplot.stats(quantitative$Months_on_book)$out
#Since the outliers in months on books can be identifying on whether the customer is going to churn we decided to keep them in the data set
#Total Relationships Count
ggplot(cleaned_bank_data_withoutNA_quan, aes(x=Total_Relationship_Count)) +
geom_bar(width=1)
#Months_Inactive_12months
ggplot(cleaned_bank_data_withoutNA_quan, aes(x=Months_Inactive_12_mon)) +
geom_bar(width=1)
#Contacts Count 12 months
ggplot(cleaned_bank_data_withoutNA_quan, aes(x=Contacts_Count_12_mon)) +
geom_bar(width=1)
# Credit Limit
#boxplot
credit.limit.boxplot <- boxplot(cleaned_bank_data_withoutNA_quan$Credit_Limit, ylab = "Dollars")
#histogram
hist(cleaned_bank_data_withoutNA_quan$Credit_Limit)
# Total Revolving Balance
#histogram
hist(cleaned_bank_data_withoutNA_quan$Total_Revolving_Bal)
#Average Open to Buy
#histogram
hist(cleaned_bank_data_withoutNA_quan$Avg_Open_To_Buy)
#Total Amount Change Between Q1 and Q4
#histogram
hist(cleaned_bank_data_withoutNA_quan$Total_Amt_Chng_Q4_Q1)
#boxplot
credit.limit.boxplot <- boxplot(cleaned_bank_data_withoutNA_quan$Total_Amt_Chng_Q4_Q1, ylab = "Dollars")
#Total Transaction Amount
#histogram
hist(cleaned_bank_data_withoutNA_quan$Total_Trans_Amt)
#Total Count Change Between Q1 and Q4
#histogram
hist(cleaned_bank_data_withoutNA_quan$Total_Ct_Chng_Q4_Q1)
#Average Utilization Rate
#histogram
hist(cleaned_bank_data_withoutNA_quan$Avg_Utilization_Ratio)
unique(cleaned_bank_data_withoutNA_quan$Attrition_Flag) #to make sure there are only 2 strings
#change 'Existing Customer' to 1 and 'Attrited Customer' to 0 and add new column to quantitative
data.split <- splitmix(cleaned_bank_data_withoutNA_quan)
quantitative <- data.split$X.quanti
qualitative <- data.split$X.quali
length(quantitative)
length(qualitative)
quantitative$attrition_flag_binary <- ifelse(cleaned_bank_data_withoutNA_quan$Attrition_Flag=='Existing Customer', 1, 0)
View(cleaned_bank_data_withoutNA_quan)
dev.off(dev.list()["RStudioGD"]) #to clear the previous plots on the screen
#Histograms
attach(cleaned_bank_data_withoutNA_quan)
par(mfrow=c(3,2))
hist(Avg_Open_To_Buy)
hist(Total_Trans_Amt)
hist(Avg_Utilization_Ratio)
hist(Months_on_book)
hist(Credit_Limit)
hist(table(Months_Inactive_12_mon))
hist(Months_Inactive_12_mon)
barplot(height=tabulate(as.factor(Income_Category)), names=unique(Income_Category), col= myPalette)
barplot(height=tabulate(as.factor(Marital_Status)), names=unique(Income_Category), col= myPalette)
barplot(height=tabulate(as.factor(Education_Level)), names=unique(Income_Category), col= myPalette)
barplot(height=tabulate(as.factor(Education_Level)), names=unique(Education_Level), col= myPalette)
barplot(height=tabulate(as.factor(Marital_Status)), names=unique(Marital_Status), col= myPalette)
